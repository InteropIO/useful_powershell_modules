function Get-M365DefenderVulnerability {
    <#
    .SYNOPSIS
    Get list of all/just one vulnerabilities/y.

    .DESCRIPTION
    Get list of all/just one vulnerabilities/y.

    .PARAMETER vulnerabilityId
    (optional) specific vulnerability ID you want to retrieve.

    .PARAMETER header
    Header created using New-M365DefenderAuthHeader.

    .PARAMETER apiUrl
    API url.

    By default "api-eu.securitycenter.microsoft.com" for best performance in EU region.

    .EXAMPLE
    $header = New-M365DefenderAuthHeader

    $allVulnerabilities = Get-M365DefenderVulnerability -header $header

    Get all vulnerabilities.

    .EXAMPLE
    $header = New-M365DefenderAuthHeader
    Get-M365DefenderVulnerability -header $header -vulnerabilityId "CVE-2022-40674"

    Get vulnerability "CVE-2022-40674" details.

    .NOTES
    Requires Vulnerability.Read.All permission.

    It can can take several minutes (there is more than 200 000 vulnerabilities now)!

    https://learn.microsoft.com/en-us/microsoft-365/security/defender-endpoint/api/get-all-vulnerabilities?view=o365-worldwide
    #>

    [CmdletBinding()]
    param (
        [string] $vulnerabilityId,

        $header,

        [ValidateSet("api.securitycenter.microsoft.com", "api-eu.securitycenter.microsoft.com", "api-us.securitycenter.microsoft.com", "api-uk.securitycenter.microsoft.com", "api-au.securitycenter.microsoft.com")]
        [string] $apiUrl = "api-eu.securitycenter.microsoft.com"
    )

    if (!$header) {
        $header = New-M365DefenderAuthHeader -ErrorAction Stop
    }

    $url = "https://$apiUrl/api/vulnerabilities"
    if ($vulnerabilityId) {
        $url = $url + "/$vulnerabilityId"
    }

    # for some reason it doesn't provides '@odata.nextLink' so I need to loop through "manually"
    # returned output is limited to 8000 items per call
    $apiDefaultLimit = 8000
    $round = 0
    do {
        $urlFinal = $url

        if (!$vulnerabilityId) {
            # doesn't make sense deal with skip if only one vulnerability will be outputted
            $urlFinal = $urlFinal + '?$skip=' + ($apiDefaultLimit * $round)
        }

        Write-Verbose "Retrieval round: $round url: $urlFinal"

        $result = Invoke-RestMethod2 -uri $urlFinal -headers $header

        $result

        ++$round
    } while ($result -and !$vulnerabilityId -and !($result.count % $apiDefaultLimit))
}